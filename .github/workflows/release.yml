# To trigger the workflow, tag sources and push
# git tag -a v1.13.1 -m "version 1.13.1"
# to tag old revision:
# git tag -a v1.13.0-beta.1 2112766 -m "version 1.13.0-beta.1"
# git push --tags
name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - v* 
    paths-ignore:      
      - ".github/**"      
      - "**/*.md"    

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js 10 x64
        uses: actions/setup-node@v2
        with:
          node-version: 10
          architecture: x64
          registry-url: 'https://registry.npmjs.org'

      - name: Prepare environment
        run: yarn install --frozen-lockfile

      - name: Lint
        run: |
          yarn run lint
          yarn run lint-docs
          yarn run lint-css

      - name: Test
        run: |
          yarn run test-flow
          yarn run test-unit
          yarn run test-render
          yarn run test-query    
          yarn run test-expressions      
      
      - name: Build
        run: |
          yarn run build-prod-min
          yarn run build-css

      - name: Prepare release
        id: prepare_release
        run: |
          RELEASE_NOTES_PATH="${PWD}/release_notes.txt"
          ./build/release-notes.js > ${RELEASE_NOTES_PATH}
          echo ::set-output name=release_notes::${RELEASE_NOTES_PATH}
          echo ::set-output name=version_tag::$( git describe --tags --match=v*.*.* --abbrev=0 )
        shell: bash      
        
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.prepare_release.outputs.version_tag }}
          release_name: ${{steps.prepare_release.outputs.version_tag }}
          body_path: ${{ steps.prepare_release.outputs.release_notes }}
          draft: false
          prerelease: false     
          
      - name: Upload GitHub Release Assets
        id: upload-gh-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist
          asset_name: dist.zip
          asset_content_type: application/zip           

      - name: Clean up release
        run: |
          rm -f ${{ steps.prepare_release.outputs.release_notes }}
        shell: bash    

      - name: Update NPM Package Version
        run: |
          yarn version --new-version ${{ steps.prepare_release.outputs.version_tag }}

      - name: Publish NPM package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}